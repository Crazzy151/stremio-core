use crate::types::resource::{SeriesInfo, Video};
use chrono::prelude::TimeZone;
use chrono::Utc;
use itertools::Itertools;

#[test]
fn videos_sort() {
    let videos = vec![
        Video {
            id: "2".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "1".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "3".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
    ];
    itertools::assert_equal(videos.clone().into_iter().sorted(), videos);
}

#[test]
fn videos_sort_released() {
    let videos = vec![
        Video {
            id: "2".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "1".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "3".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
    ];
    itertools::assert_equal(videos.clone().into_iter().sorted(), videos);
    let videos = vec![
        Video {
            id: "nd1".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "nd2".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "2".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 2, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "1".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "3".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 3, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
    ];
    itertools::assert_equal(
        videos.into_iter().sorted(),
        vec![
            Video {
                id: "3".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 3, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "2".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 2, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "1".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "nd1".to_owned(),
                title: "".to_owned(),
                released: None,
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "nd2".to_owned(),
                title: "".to_owned(),
                released: None,
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
        ],
    );
}

#[test]
fn videos_sort_series_info() {
    let videos = vec![
        Video {
            id: "special2".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 5, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: Some(SeriesInfo {
                season: 0,
                episode: 2,
            }),
            trailer_streams: vec![],
        },
        Video {
            id: "S01E02".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 2, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: Some(SeriesInfo {
                season: 1,
                episode: 2,
            }),
            trailer_streams: vec![],
        },
        Video {
            id: "special1".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 5, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: Some(SeriesInfo {
                season: 0,
                episode: 1,
            }),
            trailer_streams: vec![],
        },
        Video {
            id: "S01E01".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: Some(SeriesInfo {
                season: 1,
                episode: 1,
            }),
            trailer_streams: vec![],
        },
        Video {
            id: "M2".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "M1".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 2, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "nd1".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "nd2".to_owned(),
            title: "".to_owned(),
            released: None,
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: None,
            trailer_streams: vec![],
        },
        Video {
            id: "S02E01".to_owned(),
            title: "".to_owned(),
            released: Some(Utc.ymd(2020, 3, 1).and_hms_milli(0, 0, 0, 0)),
            overview: None,
            thumbnail: None,
            streams: vec![],
            series_info: Some(SeriesInfo {
                season: 2,
                episode: 1,
            }),
            trailer_streams: vec![],
        },
    ];
    itertools::assert_equal(
        videos.into_iter().sorted(),
        vec![
            Video {
                id: "S01E01".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: Some(SeriesInfo {
                    season: 1,
                    episode: 1,
                }),
                trailer_streams: vec![],
            },
            Video {
                id: "S01E02".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 2, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: Some(SeriesInfo {
                    season: 1,
                    episode: 2,
                }),
                trailer_streams: vec![],
            },
            Video {
                id: "S02E01".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 3, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: Some(SeriesInfo {
                    season: 2,
                    episode: 1,
                }),
                trailer_streams: vec![],
            },
            Video {
                id: "special1".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 5, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: Some(SeriesInfo {
                    season: 0,
                    episode: 1,
                }),
                trailer_streams: vec![],
            },
            Video {
                id: "special2".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 5, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: Some(SeriesInfo {
                    season: 0,
                    episode: 2,
                }),
                trailer_streams: vec![],
            },
            Video {
                id: "M1".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 2, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "M2".to_owned(),
                title: "".to_owned(),
                released: Some(Utc.ymd(2020, 1, 1).and_hms_milli(0, 0, 0, 0)),
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "nd1".to_owned(),
                title: "".to_owned(),
                released: None,
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
            Video {
                id: "nd2".to_owned(),
                title: "".to_owned(),
                released: None,
                overview: None,
                thumbnail: None,
                streams: vec![],
                series_info: None,
                trailer_streams: vec![],
            },
        ],
    );
}
